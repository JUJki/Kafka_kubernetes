---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafkazookeeper
  labels:
    app.kubernetes.io/name: kafkazookeeper
    app.kubernetes.io/part-of: kafka
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kafkazookeeper
      app.kubernetes.io/part-of: kafka
  serviceName: broker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kafkazookeeper
        app.kubernetes.io/part-of: kafka
    spec:
      nodeSelector:
        node-type: standard
      containers:
      - name: kafka
        image: wurstmeister/kafka:2.12-2.2.0
        env:
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: broker.kubeless
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_PORT
          value: "9092"
        - name: KAFKA_DELETE_TOPIC_ENABLE
          value: "true"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "localhost:2181"
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        - name: KAFKA_MESSAGE_MAX_BYTES
          value: "15728640"
        - name: KAFKA_REPLICA_FETCH_MAX_BYTES
          value: "15728640"
        - name: KAFKA_NUM_PARTITIONS
          value: "2"
        - name: KAFKA_CREATE_TOPICS
          value: "Video:2:1"
        imagePullPolicy: Always
        livenessProbe:
          initialDelaySeconds: 30
          tcpSocket:
            port: 9092
        ports:
        - containerPort: 9092
        volumeMounts:
        - mountPath: /kafka/data
          name: datadir
      - name: zookeeper
        image: wurstmeister/zookeeper:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: peer
        - containerPort: 3888
          name: leader-election
        volumeMounts:
        - mountPath: /zookeeper
          name: zookeeper
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: pd-ssd
      resources:
        requests:
          storage: 5Gi
  - metadata:
      name: zookeeper
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: pd-ssd
      resources:
        requests:
          storage: 5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  labels:
    app.kubernetes.io/name: kafkazookeeper
    app.kubernetes.io/part-of: kafka
spec:
  ports:
  - port: 9092
  selector:
    app.kubernetes.io/name: kafkazookeeper
    app.kubernetes.io/part-of: kafka

---
apiVersion: v1
kind: Service
metadata:
  name: broker
  labels:
    app.kubernetes.io/name: kafkazookeeper
    app.kubernetes.io/part-of: kafka
spec:
  clusterIP: None
  ports:
  - port: 9092
  selector:
    app.kubernetes.io/name: kafkazookeeper
    app.kubernetes.io/part-of: kafka

---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  labels:
    app.kubernetes.io/name: kafkazookeeper
    app.kubernetes.io/part-of: kafka
spec:
  clusterIP: None
  ports:
  - name: client
    port: 2181
  - name: peer
    port: 2888
  - name: leader-election
    port: 3888
  selector:
    app.kubernetes.io/name: kafkazookeeper
    app.kubernetes.io/part-of: kafka

---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: kafka
  labels:
    app.kubernetes.io/name: kafkazookeeper
    app.kubernetes.io/part-of: kafka
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: kafkazookeeper
      app.kubernetes.io/part-of: kafka
  ingress:
  - ports:
      - port: 9092
        protocol: TCP
    from:
      - podSelector:
          matchLabels:
            app.kubernetes.io/name: provider
            app.kubernetes.io/part-of: kafka

---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: zookeeper
  labels:
    app.kubernetes.io/name: kafkazookeeper
    app.kubernetes.io/part-of: heimdall
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: kafkazookeeper
      app.kubernetes.io/part-of: heimdall
  ingress:
  - ports:
      - port: 3888
        protocol: TCP
    from:
      - podSelector:
          matchLabels:
            app.kubernetes.io/name: kafkazookeeper
            app.kubernetes.io/part-of: kafka
